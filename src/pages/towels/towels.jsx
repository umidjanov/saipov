import React, { useState } from "react";
import { NavbarDefault } from "../../components/navbar";
import { Footer } from "../../components/footer";
import { div } from "framer-motion/client";

const dummyTowels = [
  { id: 1, name: "–ù–∞–±–æ—Ä –ø–æ–ª–æ—Ç–µ–Ω–µ—Ü 4 —à—Ç", price: 25 },
  { id: 2, name: "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ –¥–µ—Ç—Å–∫–æ–µ", price: 15 },
  { id: 3, name: "–ù–∞–±–æ—Ä –ø–æ–ª–æ—Ç–µ–Ω–µ—Ü 5 —à—Ç", price: 27 },
  { id: 4, name: "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ –±–∞–Ω–Ω–æ–µ", price: 22 },
  { id: 5, name: "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ —Å –≤—ã—à–∏–≤–∫–æ–π", price: 30 },
];

const TowelsPage = () => {
  const [sortOption, setSortOption] = useState("name-asc");
  const [minPrice, setMinPrice] = useState("");
  const [maxPrice, setMaxPrice] = useState("");

  // üîΩ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
  const sortedTowels = [...dummyTowels].sort((a, b) => {
    switch (sortOption) {
      case "name-asc":
        return a.name.localeCompare(b.name);
      case "name-desc":
        return b.name.localeCompare(a.name);
      case "price-asc":
        return a.price - b.price;
      case "price-desc":
        return b.price - a.price;
      default:
        return 0;
    }
  });

  // üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ü–µ–Ω–µ
  const filteredTowels = sortedTowels.filter((item) => {
    const isAboveMin = minPrice === "" || item.price >= Number(minPrice);
    const isBelowMax = maxPrice === "" || item.price <= Number(maxPrice);
    return isAboveMin && isBelowMax;
  });

  return (
    <>
      <NavbarDefault />
      <div className="max-w-5xl mx-auto px-4 py-10">
        <h1 className="text-2xl font-bold mb-6">–ü–æ–ª–æ—Ç–µ–Ω—Ü–∞</h1>

        {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä */}
        <div className="flex flex-col sm:flex-row sm:items-end sm:gap-6 mb-8 gap-4">
          {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
          <div>
            <label className="block text-sm font-medium mb-1">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</label>
            <select
              value={sortOption}
              onChange={(e) => setSortOption(e.target.value)}
              className="border rounded px-3 py-2 text-sm w-48"
            >
              <option value="name-asc">–ü–æ –∞–ª—Ñ–∞–≤–∏—Ç—É (A‚ÄìZ)</option>
              <option value="name-desc">–ü–æ –∞–ª—Ñ–∞–≤–∏—Ç—É (Z‚ÄìA)</option>
              <option value="price-asc">–ü–æ —Ü–µ–Ω–µ (–º–∏–Ω ‚Üí –º–∞–∫—Å)</option>
              <option value="price-desc">–ü–æ —Ü–µ–Ω–µ (–º–∞–∫—Å ‚Üí –º–∏–Ω)</option>
            </select>
          </div>

          {/* –ú–∏–Ω / –ú–∞–∫—Å */}
          <div className="flex gap-4">
            <div>
              <label className="block text-sm font-medium mb-1">
                –ú–∏–Ω. —Ü–µ–Ω–∞
              </label>
              <input
                type="number"
                min="0"
                value={minPrice}
                onChange={(e) => setMinPrice(e.target.value)}
                className="border rounded px-3 py-2 text-sm w-32"
                placeholder="–æ—Ç"
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-1">
                –ú–∞–∫—Å. —Ü–µ–Ω–∞
              </label>
              <input
                type="number"
                min="0"
                value={maxPrice}
                onChange={(e) => setMaxPrice(e.target.value)}
                className="border rounded px-3 py-2 text-sm w-32"
                placeholder="–¥–æ"
              />
            </div>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
        {filteredTowels.length > 0 ? (
          <ul className="grid sm:grid-cols-2 md:grid-cols-3 gap-4">
            {filteredTowels.map((item) => (
              <li
                key={item.id}
                className="bg-white p-4 rounded shadow-sm border flex flex-col justify-between"
              >
                <h3 className="text-sm font-semibold mb-2">{item.name}</h3>
                <span className="text-gray-600 text-sm">{item.price} $</span>
              </li>
            ))}
          </ul>
        ) : (
          <p className="text-gray-500 text-sm">
            –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
          </p>
        )}
      </div>
      <Footer />
    </>
  );
};

export default TowelsPage;
